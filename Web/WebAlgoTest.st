TestCase subclass: #DnsTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'WebAlgoTest'!!DnsTest methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2014 15:51'!testKnownUrlShouldNotRaiseException	| dns |	dns := DNS new.		self shouldnt: [ dns uri: 'www.fi.uba.ar' ] raise: UnknownUrl.! !!DnsTest methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2014 15:50'!testUnKnownUrlShouldRaiseUnknownUrl	| dns |	dns := DNS new.		self should: [dns uri: 'www.telele.com'] raise: UnknownUrl.! !!DnsTest methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2014 15:48'!testKnownUrlShouldBeResolved	| dns |	dns := DNS new.		self assert: (dns uri: 'www.yahoo.com') equals: '98.139.180.149'.! !TestCase subclass: #KonquerorTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'WebAlgoTest'!!KonquerorTest methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2014 15:18'!testUserOpenUrlAndGetHtmlContent	| browser googleHtml fiubaHtml |	browser := Konqueror withDns: DNS new.		googleHtml := browser open: 'www.google.com'.	self assert: googleHtml equals: '<html><head><title>Google</title></head><body></body></html>'.	fiubaHtml := browser open: 'www.fi.uba.ar'.	self assert: fiubaHtml equals: '<html><body><h1>Facultad de Ingenieria UBA</body></html>'.! !!KonquerorTest methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2014 15:43'!testUserOpenUnknownUr	| browser |	browser := Konqueror withDns: DNS new.		self should: [ browser open: 'www.imlazy.com' ] raise: ServerUnreachable .! !TestCase subclass: #MarcosTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'WebAlgoTest'!!MarcosTests methodsFor: 'tests' stamp: 'DS 4/11/2019 20:15'!testMarcosEstoVaFallar	UnknownUrl  signal.! !!MarcosTests methodsFor: 'tests' stamp: 'DS 4/11/2019 20:18'!testMarcosEstoOtroMas	self should: [ UnknownUrl signal ] raise: UnknownUrl.! !!MarcosTests methodsFor: 'tests' stamp: 'DS 4/11/2019 20:17'!testMarcosEstoOtro	self should: [ UnknownUrl signal ] raise: UnknownUrl.! !