Object subclass: #Iphone11	instanceVariableNames: 'bateria'	classVariableNames: ''	package: 'Clase-2-opcion-2'!!Iphone11 methodsFor: 'initialization' stamp: 'Pablo 4/21/2020 12:26'!initialize 	self recargarBateria.! !!Iphone11 methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:49'!realizarLlamadaDe: minutos	bateria := bateria - (minutos * 0.01).! !!Iphone11 methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:24'!estaApagado	^ bateria = 0.! !!Iphone11 methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:25'!recargarBateria	bateria := 5.! !!Iphone11 methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:52'!recibirLlamadaDe: minutos	bateria := bateria - (minutos * 0.01).! !!Iphone11 methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:22'!bateriaRestante	^ bateria.! !Object subclass: #MotoG8Plus	instanceVariableNames: 'bateria'	classVariableNames: ''	package: 'Clase-2-opcion-2'!!MotoG8Plus methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:48'!realizarLlamadaDe: minutos	bateria := bateria - 0.25.! !!MotoG8Plus methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:25'!estaApagado	^ bateria = 0.! !!MotoG8Plus methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:25'!recargarBateria	bateria := 5.! !!MotoG8Plus methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:52'!recibirLlamadaDe: minutos	bateria := bateria - 0.25.! !!MotoG8Plus methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:22'!bateriaRestante	^ bateria.! !!MotoG8Plus methodsFor: 'initialization' stamp: 'Pablo 4/21/2020 12:26'!initialize	self recargarBateria.! !Object subclass: #Persona	instanceVariableNames: 'nombre celular'	classVariableNames: ''	package: 'Clase-2-opcion-2'!!Persona methodsFor: 'accessing' stamp: 'Pablo 4/21/2020 12:20'!nombre: unNombre	nombre := unNombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:21'!comprarCelular: unCelular.	celular := unCelular.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:51'!recibirLlamadaDe: minutos	celular recibirLlamadaDe: minutos.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 12:54'!celularApagado	^ celular estaApagado.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:28'!llamarA: unaPersona conDuracionDe: minutos	"no deberia poder llamar si mi celular está apagado"	celular estaApagado ifFalse: [		celular realizarLlamadaDe: minutos.		unaPersona recibirLlamadaDe: minutos.	].! !Object subclass: #Individuo	instanceVariableNames: 'tengoMotoG tengoIphone bateria nombre'	classVariableNames: ''	package: 'Clase-2-opcion-1'!!Individuo methodsFor: 'initialization' stamp: 'Pablo 4/21/2020 16:32'!initialize	tengoIphone := false.	tengoMotoG := false.	bateria := 5.	nombre := ''.! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:35'!comprarCelular: unCelular.		(unCelular = 'iphone') ifTrue: [ 		tengoIphone := true	].	(unCelular = 'motog') ifTrue: [ 		tengoMotoG := true	].	"No sé que compré"! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:46'!tieneMotoG	^ tengoMotoG.! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:46'!tieneIphone	^ tengoIphone.! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:43'!getBateria	^ bateria.! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:55'!llamarA: unIndividuo conDuracionDe: minutos	|nuevaBateria|		"no deberia poder llamar si mi celular está apagado"	(bateria > 0) ifTrue:[		tengoIphone ifTrue: [			"si estoy acá es porque tengo un iphone => hago las cuentas de cuanto se gasta mi bateria para el iphone"			bateria := bateria - (minutos * 0.01).			"Vemos que onda el individuo que estamos llamando"			unIndividuo tieneIphone ifTrue: [ 				"Al que estoy llamando también tiene iphone => hago las cuentas para el iphone de ese individuo también"				nuevaBateria := unIndividuo getBateria - (minutos * 0.01).				unIndividuo setBateria: nuevaBateria.	      ] ifFalse: [ 				"Me fijo si tiene un MotoG"				unIndividuo tieneMotoG ifTrue: [					"Tiene motoG => hago las cuenas para el MotoG del individuo al que estoy llamando"					nuevaBateria := unIndividuo getBateria - 0.25.					unIndividuo setBateria: nuevaBateria.				] ifFalse: [					"La verdad no se que tiene, así que no puedo hacer nada che"				].	      ].		] ifFalse: [ 			tengoMotoG ifTrue: [				"Yo tengo MotoG => hago las cuentas para MI MotoG"				bateria := bateria - 0.25.				"Vemos que onda el individuo que estamos llamando"				unIndividuo tieneIphone ifTrue: [ 					"Al que estoy llamando también tiene iphone => hago las cuentas para el iphone de ese individuo también"					nuevaBateria := unIndividuo getBateria - (minutos * 0.01).					unIndividuo setBateria: nuevaBateria.	         ] ifFalse: [ 					"Me fijo si tiene un MotoG"					unIndividuo tieneMotoG ifTrue: [						"Tiene motoG => hago las cuenas para el MotoG del individuo al que estoy llamando"						nuevaBateria := unIndividuo getBateria - 0.25.						unIndividuo setBateria: nuevaBateria.					] ifFalse: [						"La verdad no se que tiene, así que no puedo hacer nada che"					].	      		].			].		].	].! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:33'!celularApagado	^ bateria <= 0.! !!Individuo methodsFor: 'as yet unclassified' stamp: 'Pablo 4/21/2020 16:44'!setBateria: nuevaBateria	bateria := nuevaBateria.! !