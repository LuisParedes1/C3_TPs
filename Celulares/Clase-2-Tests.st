TestCase subclass: #Iphone11Test	instanceVariableNames: ''	classVariableNames: ''	package: 'Clase-2-Tests-opcion-2'!!Iphone11Test methodsFor: 'tests' stamp: 'Pablo 4/21/2020 13:23'!test01IphoneNuevoDeberiaTenerBateriaLlena|iphone bateria|"Arrange"iphone := Iphone11 new."Act"bateria := iphone bateriaRestante."Assert"self assert: bateria equals: 5.! !!Iphone11Test methodsFor: 'tests' stamp: 'Pablo 4/21/2020 16:25'!test02IphoneNuevoRealizaUnaLlamadaDe10MinutosDeberiaTenerMenosBateria|iphone bateria|"Arrange"iphone := Iphone11 new."Act"iphone realizarLlamadaDe: 10."Assert"self assert: iphone bateriaRestante equals: 4.9.! !TestCase subclass: #MotoG8PlusTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Clase-2-Tests-opcion-2'!!MotoG8PlusTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 13:21'!test01MotoG8PlusNuevoDeberiaTenerBateriaLlena|motog bateria|"Arrange"motog := MotoG8Plus new."Act"bateria := motog bateriaRestante."Assert"self assert: bateria equals: 5.! !!MotoG8PlusTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 16:24'!test02MotoG8PlusRecibeUnaLlamadaDeberiaConsumirUnCuartoDePuntoDeBateria|motog bateria|"Arrange"motog := MotoG8Plus new."Act"motog recibirLlamadaDe: 10."Assert"self assert: motog bateriaRestante equals: 4.75.! !TestCase subclass: #PersonaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Clase-2-Tests-opcion-2'!!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 20:05'!test01PesonaCompraMotoG8PlusNoDeberiaEstarApagado	|mariana motoG8Plus|	"AAA"	"Arrange" 	mariana := Persona new.	mariana nombre: 'Mariana'.	motoG8Plus := MotoG8Plus new.		"Act"	mariana comprarCelular: motoG8Plus.		"Assert"	self assert: (mariana celularApagado) not.! !!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 15:53'!test06PaolalamaAMarianaDurante499MinutosDeberiaTenerElCelularNoApagado	|mariana paola motoG8Plus iphone|		"Arrange"	mariana := Persona new.	mariana nombre: 'Mariana'.	motoG8Plus := MotoG8Plus new.	mariana comprarCelular: motoG8Plus.		paola := Persona new.	paola nombre: 'Paola'.	iphone := Iphone11 new.	paola comprarCelular: iphone.		"Act"   paola llamarA: mariana conDuracionDe: 499.		"Assert"	self assert: (paola celularApagado) not.	! !!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 13:08'!test02PesonaCompraIphone11NoDeberiaEstarApagado	|paola iphone|	"Arrange"	paola := Persona new.	paola nombre: 'Paola'.	iphone := Iphone11 new.		"Act"	paola comprarCelular: iphone .		"Assert"	self assert: (paola celularApagado) not.! !!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 15:53'!test03MarianaLlamaAPaola20VecesDeberiaTenerCeularApagado	|mariana paola motoG8Plus iphone|		"Arrange"	mariana := Persona new.	mariana nombre: 'Mariana'.	motoG8Plus := MotoG8Plus new.	mariana comprarCelular: motoG8Plus.		paola := Persona new.	paola nombre: 'Paola'.	iphone := Iphone11 new.	paola comprarCelular: iphone.		"Act"	1 to: 20 do: [:num |		mariana llamarA: paola conDuracionDe: 10.	].			"Assert"	self assert: mariana celularApagado.	! !!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 15:52'!test05MarianaLlamaAPaola19VecesDeberiaTenerCelularNoApagado	|mariana paola motoG8Plus iphone|		"Arrange"	mariana := Persona new.	mariana nombre: 'Mariana'.	motoG8Plus := MotoG8Plus new.	mariana comprarCelular: motoG8Plus.		paola := Persona new.	paola nombre: 'Paola'.	iphone := Iphone11 new.	paola comprarCelular: iphone.		"Act"	1 to: 19 do: [:num |		mariana llamarA: paola conDuracionDe: 10.	].			"Assert"	self assert: (mariana celularApagado) not.	! !!PersonaTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 20:08'!test04PaolaLlamaAMarianaDurante500MinutosDeberiaTenerCelularApagado	|mariana paola motoG8Plus iphone|		"Arrange"	mariana := Persona new.	mariana nombre: 'Mariana'.	motoG8Plus := MotoG8Plus new.	mariana comprarCelular: motoG8Plus.		paola := Persona new.	paola nombre: 'Paola'.	iphone := Iphone11 new.	paola comprarCelular: iphone.		"Act"   paola llamarA: mariana conDuracionDe: 500.		"Assert"	self assert: paola celularApagado.	! !TestCase subclass: #IndividuoTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Clase-2-Tests-opcion-1'!!IndividuoTest methodsFor: 'tests' stamp: 'Pablo 4/21/2020 19:40'!test01MarianaLlamaAPaolaYPaolaLlamaAMariana	|mariana paola bateriaDePaola|		mariana := Individuo new.	mariana comprarCelular: 'motog'.		paola := Individuo new.	paola comprarCelular: 'iphone'.		mariana llamarA: paola conDuracionDe: 10.		self assert: mariana getBateria equals: 4.75.	self assert: paola getBateria equals: 4.9.		"ahora hacemos al rev√©s que paola llame a mariana a ver si anda !!!!"		paola llamarA: mariana conDuracionDe: 30.	bateriaDePaola := (paola getBateria) roundUpTo: 0.01.		self assert: mariana getBateria equals: 4.5.	self assert: bateriaDePaola equals: 4.61.! !