@startuml usuarioPresupuestoPintorUtilizaPincelConPinturaAlbaOfreceElMenorPresupuesto
    hide footbox
    skinparam classAttributeIconSize 0
   
    actor usuario
    activate usuario

    autonumber 1.0
    create "algoFix:AlgoFix" as algoFix
    usuario -> algoFix: << create >>
    activate algoFix
    
    usuario -> "algoFix:AlgoFix" as algoFix: registrarPintorDePincel("Diego", 500)
   
    
    autonumber 2.0

    create "pintor:Pintor" as pintor
    algoFix -> pintor: << create >>
    activate pintor

    create "pincel: Pincel" as pincel
    pintor -> pincel: << create >>
    activate pincel

    create "descuento:Descuento" as descuento
    pincel -> descuento: << create >>
    activate descuento


    autonumber 3.0
    usuario -> algoFix: alba = crearPintura(alba, 200, 1, 1)

    create "alba:Pintura" as alba
    algoFix -> alba: << create >>
    activate alba

    autonumber 4.0
    usuario -> algoFix: presupuesto = presp...M2Pintura(5, alba)

    loop pintores
        algoFix -> pintor: calcularCostoM2ConPintura(5, alba)
        algoFix -> pintor: valor = valor()
        pintor --> algoFix: valor
        algoFix -> algoFix: detectMin(valor)
    end 

    algoFix --> usuario: presupuesto

@enduml

/'    activate Pintor
    'Crea el objeto Herramienta
    create Herramienta 
    Pintor --> Herramienta : Crear_Herramienta
    return

    alt [1>2]
        Pintor -> Pintor
    end

    AlgoFix -> Pintura : creo_pintura
    return

    objeto1 ->]
    ' Mensaje perdido

    [o-> objeto2
    ' Mensaje encontrado


 '   note right: First messege

    objeto2 -> objeto2 : autogol
'/