Object subclass: #AlgoFix	instanceVariableNames: 'pintores'	classVariableNames: ''	package: 'TP1'!!AlgoFix methodsFor: 'test-only' stamp: 'LuisParedes 5/17/2020 22:17'!cantEmpleados 	^ pintores size.! !!AlgoFix methodsFor: 'initialization' stamp: 'LuisParedes 5/17/2020 09:34'!initialize	pintores := OrderedCollection new.! !!AlgoFix methodsFor: 'registrarPintores' stamp: 'LuisParedes 5/17/2020 09:33'!registrarPintorDePincel: unNombrePintor conValorHora: unValorHora 	pintores add: (Pintor registrarPintorDePincel: unNombrePintor conValorHora: unValorHora)! !!AlgoFix methodsFor: 'registrarPintores' stamp: 'LuisParedes 5/17/2020 16:58'!registrarPintorDeRodillo: unNombrePintor conValorHora: unValorHora 	pintores add: (Pintor registrarPintorDeRodillo: unNombrePintor conValorHora: unValorHora)! !!AlgoFix methodsFor: 'presupuesto' stamp: 'LuisParedes 5/23/2020 10:24'!presupuestoMasBaratoParaPintarMetrosCuadrados: numMetros conPintura: unaPintura 		pintores do: [:pintor | pintor calcularCostoM2: numMetros conPintura: unaPintura ]. 		^ pintores detectMin: [:pintor | pintor valor].	! !!AlgoFix methodsFor: 'presupuesto' stamp: 'LuisParedes 5/23/2020 14:07'!manoDeObra: costoManoObra masMateriales: costoMateriales	^ costoManoObra + costoMateriales.! !!AlgoFix methodsFor: 'crearPintura' stamp: 'LuisParedes 5/17/2020 21:54'!crearPintura: unaPintura conPrecioPorLitro: unPrecioPorLitro manosPincel: numManos manosRodillo: numRodillos 	^ Pintura crearPintura: unaPintura conPrecioPorLitro: unPrecioPorLitro manosPincel: numManos manosRodillo: numRodillos.! !Object subclass: #Herramienta	instanceVariableNames: 'horasTrabajoM2 descuentoMas40M2 consumoM2'	classVariableNames: ''	package: 'TP1'!!Herramienta methodsFor: 'initialization' stamp: 'LuisParedes 5/17/2020 20:48'!initialize	self subclassResponsibility.! !!Herramienta methodsFor: 'presupuesto' stamp: 'LuisParedes 5/17/2020 21:21'!numeroManos: numMetros 	self subclassResponsibility.! !!Herramienta methodsFor: 'presupuesto' stamp: 'LuisParedes 5/26/2020 09:22'!descuento: metrosPintar deCosto: costo 	( (metrosPintar <= 0) | (costo <= 0) ) ifTrue: [ ValorInvalido signal ].		^ descuentoMas40M2 * costo.! !!Herramienta methodsFor: 'presupuesto' stamp: 'LuisParedes 5/23/2020 13:40'!horasTrabajoM2: numMetros	(numMetros <= 0) ifTrue: [ ValorInvalido signal ].	^ numMetros * horasTrabajoM2! !!Herramienta methodsFor: 'presupuesto' stamp: 'LuisParedes 5/25/2020 14:03'!litrosPinturaUsarM2: numMetros	(numMetros <= 0) ifTrue: [ ValorInvalido signal ].	^ numMetros * consumoM2! !!Herramienta methodsFor: 'test-only' stamp: 'LuisParedes 5/26/2020 13:53'!descuentoMas40M2	^ descuentoMas40M2.! !Herramienta subclass: #Pincel	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Pincel methodsFor: 'initialization' stamp: 'LuisParedes 5/25/2020 14:03'!initialize	consumoM2 := 4. "4 Litros"	horasTrabajoM2 := 2.	"2 horas por metro cuadrado"	descuentoMas40M2 := 0.5. "50% si pinta mas de 50 M2"! !!Pincel methodsFor: 'presupuesto' stamp: 'LuisParedes 5/17/2020 21:19'!numeroManos: unaPintura 	^ unaPintura manosPincel.! !Object subclass: #Pintor	instanceVariableNames: 'nombre valorHora herramienta costoProyecto'	classVariableNames: ''	package: 'TP1'!!Pintor methodsFor: 'initialization' stamp: 'LuisParedes 5/17/2020 21:24'!initialize	nombre := String new.	valorHora := 0.	costoProyecto := 0.! !!Pintor methodsFor: 'presupuestoPrivado' stamp: 'LuisParedes 5/17/2020 20:59'!costoManoObraM2: metrosPintar	^ valorHora * (herramienta horasTrabajoM2: metrosPintar). ! !!Pintor methodsFor: 'presupuestoPrivado' stamp: 'LuisParedes 5/23/2020 13:18'!costoMateriales: unaPintura porM2: numMetros	^ unaPintura presupuestoLitros: (herramienta litrosPinturaUsarM2: numMetros)! !!Pintor methodsFor: 'presupuestoPrivado' stamp: 'LuisParedes 5/26/2020 09:22'!descuento: metrosPintar 	( metrosPintar < 40) ifTrue: [ ^ 0 ].		^ herramienta descuento: metrosPintar deCosto: (self costoManoObraM2: metrosPintar).! !!Pintor methodsFor: 'setter' stamp: 'LuisParedes 5/17/2020 09:11'!asignarHerramienta: unaHerramienta	herramienta := unaHerramienta.! !!Pintor methodsFor: 'setter' stamp: 'LuisParedes 5/16/2020 18:02'!asignarNombre: unNombre	nombre := unNombre.! !!Pintor methodsFor: 'setter' stamp: 'LuisParedes 5/16/2020 18:03'!asignarPrecio: unPrecio	valorHora := unPrecio.! !!Pintor methodsFor: 'presupuesto' stamp: 'LuisParedes 5/23/2020 13:23'!calcularCostoM2: numMetros conPintura: unaPintura 	(numMetros <= 0) ifTrue: [ ValorInvalido signal ].		costoProyecto := ( (self costoManoObraM2: numMetros) - (self descuento: numMetros) + 				(self costoMateriales: unaPintura porM2: numMetros) ) * (herramienta numeroManos: unaPintura).! !!Pintor methodsFor: 'getters' stamp: 'LuisParedes 5/16/2020 19:34'!responsable	^ nombre.! !!Pintor methodsFor: 'getters' stamp: 'LuisParedes 5/17/2020 14:01'!valor	^ costoProyecto.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: 'nombre valorHora'!!Pintor class methodsFor: 'constructor' stamp: 'LuisParedes 5/17/2020 19:43'!registrarPintorDePincel: unNombrePintor conValorHora: unValorHora 	^ self registrarPintor: unNombrePintor  conValorHora: unValorHora conHerramienta: (Pincel new).! !!Pintor class methodsFor: 'constructor' stamp: 'LuisParedes 5/17/2020 19:43'!registrarPintorDeRodillo: unNombrePintor conValorHora: unValorHora 	^ self registrarPintor: unNombrePintor  conValorHora: unValorHora conHerramienta: (Rodillo new).! !!Pintor class methodsFor: 'constructor' stamp: 'LuisParedes 5/23/2020 13:16'!registrarPintor: unNombrePintor  conValorHora: unValorHora conHerramienta: unaHerramienta	|pintor|		(unValorHora < 0) ifTrue: [ ValorInvalido signal].		pintor := self new.	pintor asignarNombre: unNombrePintor.	pintor asignarPrecio: unValorHora.	pintor asignarHerramienta: unaHerramienta.		^ pintor.! !Object subclass: #Pintura	instanceVariableNames: 'precioLitro numManosPincel numManosRodillo nombre'	classVariableNames: ''	package: 'TP1'!!Pintura methodsFor: 'setter' stamp: 'LuisParedes 5/17/2020 10:00'!asignarNombre: unNombre 	nombre := unNombre.! !!Pintura methodsFor: 'setter' stamp: 'LuisParedes 5/16/2020 18:39'!asignarManosPincel: numManos.	numManosPincel := numManos.! !!Pintura methodsFor: 'setter' stamp: 'LuisParedes 5/16/2020 18:37'!asignarPrecioPorLitro: unPrecioPorLitro.	precioLitro := unPrecioPorLitro.! !!Pintura methodsFor: 'setter' stamp: 'LuisParedes 5/16/2020 18:39'!asignarManosRodillo: numRodillos.	numManosRodillo := numRodillos.! !!Pintura methodsFor: 'presupuesto' stamp: 'LuisParedes 5/23/2020 13:30'!presupuestoLitros: numLitros 	(numLitros <= 0) ifTrue: [ ValorInvalido signal ].		^ numLitros * precioLitro.! !!Pintura methodsFor: 'getters' stamp: 'LuisParedes 5/17/2020 14:09'!manosPincel	^ numManosPincel.! !!Pintura methodsFor: 'getters' stamp: 'LuisParedes 5/17/2020 14:13'!manosRodillo	^ numManosRodillo.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'constructor' stamp: 'LuisParedes 5/17/2020 21:50'!crearPintura: unaPintura conPrecioPorLitro: unPrecioPorLitro manosPincel: manosPincel manosRodillo: manosRodillos	|pintura|		((unPrecioPorLitro < 0) | (manosPincel < 0) | (manosRodillos < 0)) ifTrue: [ValorInvalido signal].		pintura := self new.	pintura asignarNombre: unaPintura.	pintura asignarPrecioPorLitro: unPrecioPorLitro.	pintura asignarManosPincel: manosPincel.	pintura asignarManosRodillo: manosRodillos.		^ pintura.! !Herramienta subclass: #Rodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Rodillo methodsFor: 'presupuesto' stamp: 'LuisParedes 5/17/2020 21:20'!numeroManos: unaPintura 	^ unaPintura manosRodillo.! !!Rodillo methodsFor: 'initialization' stamp: 'LuisParedes 5/25/2020 14:03'!initialize	consumoM2 := 5. "5 Litros por metro cuadrado"	horasTrabajoM2 := 1.	"1 horas por metro cuadrado"	descuentoMas40M2 := 0.! !Error subclass: #ValorInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!